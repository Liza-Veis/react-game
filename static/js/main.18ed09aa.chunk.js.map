{"version":3,"sources":["AppConstants/index.ts","AppConstants/constants.ts","assets/images/rs-logo.svg","components/Footer.tsx","redux/chessActions/chessActionsTypes.ts","redux/chessActions/index.ts","components/Home/Home.tsx","components/Game/components/Square.tsx","components/Game/components/Piece.tsx","utils.ts","components/Game/components/Promotion.tsx","components/Game/components/GameOver.tsx","components/Game/components/Board.tsx","AI/index.ts","AI/sendMessage.ts","hooks/useHotkeys.ts","components/Game/Game.tsx","components/Settings/components/inputs/RadioInput.tsx","components/Settings/components/AiSettings.tsx","components/Settings/components/inputs/RangeInput.tsx","components/Settings/components/AudioSettings.tsx","components/Settings/components/FullscreenSettings.tsx","components/Settings/components/ModeSettings.tsx","components/Settings/components/TwoPlayersSettings.tsx","components/Settings/Settings.tsx","hooks/useFullscreen.ts","components/Statistics/Statistics.tsx","components/HotKeys/HotKeys.tsx","App.tsx","reportWebVitals.ts","assets/audio/move.wav","assets/audio/music.mp3","redux/setup.ts","redux/chessReducer.ts","redux/store.ts","AI/handleMessage.ts","index.tsx"],"names":["DEFAULT_VIEW","DEFAULT_SIDE","DEFAULT_MODE","DEFAULT_SOUND","DEFAULT_MUSIC","DEFAULT_AILEVEL","Footer","className","href","src","logo","alt","SELECT_SQUARE","MOVE_PIECE","MAKE_AI_MOVE","PROMOTE_PAWN","START_GAME","SURRENDER","UNDO","SET_VIEW","SET_SIDE","SET_MODE","SET_MUSIC","SET_SOUND","SET_AI_LEVEL","setMusic","value","type","payload","setSound","connect","dispatch","startNewGame","onClick","to","Square","props","children","isDark","handleClick","isLastMove","isPossibleSquare","isCapturedSquare","possibleMovesShown","lastMoveShown","Piece","piece","isSelected","turn","mode","side","color","title","toUpperCase","img","process","interactiveClass","getXY","idx","isReversed","x","Math","abs","y","floor","isDarkSquare","getPosition","getIndex","position","file","indexOf","getRandomSide","round","random","promote","data","promotePawn","map","promotion","from","state","result","board","selectedSquare","isGameOver","actualSide","isSurrender","lastMove","possibleMoves","posibleMoves","capturedMoves","selectSquare","movePiece","useState","isShownGameOver","setIsShownGameOver","useEffect","timeout","setTimeout","clearTimeout","targetPiece","includes","stockfish","Worker","postMessage","generateAIMove","fen","setAISkillLevel","level","errorProbab","maxErr","useHotkeys","code","callback","handleKeydown","useCallback","e","document","addEventListener","removeEventListener","surrender","undo","undoFn","surrenderFn","isLastMoveShown","setIsLastMoveShown","isPossibleMovesShown","setIsPossibleMovesShown","moveTimeout","setMoveTimeout","handleUndo","RadioInput","name","checked","label","defaultChecked","AiSettings","handleChange","onChange","RangeInput","min","max","step","defaultValue","AudioSettings","music","sound","FullscreenSettings","fullscreen","isFullscreen","setIsFullscreen","isChecked","setIsChecked","htmlFor","id","ModeSettings","TwoPlayersSettings","view","AILevel","setSide","setView","setMode","setAILevel","target","useFullscreen","elRef","fullscreenElement","useLayoutEffect","onfullscreenchange","current","exitFullscreen","then","requestFullscreen","statistics","headers","header","row","i","toString","HotKeys","AppRef","useRef","ref","exact","path","component","Home","Game","Statistics","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getStoredItem","localStorage","getItem","statisticsJSON","JSON","parse","settingsJSON","storeItem","settings","newSettings","setItem","stringify","startSettings","undefined","audio","move","Audio","moveSound","loop","chess","Chess","saveToStatistics","statisticsField","date","Date","toLocaleString","month","day","hour","minute","unshift","slice","getBoard","flat","reverse","getResults","in_checkmate","winner","in_draw","reason","in_stalemate","in_threefold_repetition","insufficient_material","window","location","pathname","initialState","chessReducer","action","reset","boardProps","isReversedBoard","moves","square","verbose","forEach","captured","push","promotions","filter","m","length","play","catch","isLegal","game_over","history","volume","paused","pause","store","createStore","handleMessage","split","onmessage","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.18ed09aa.chunk.js","sourcesContent":["export * from './constants';\nexport * from './types';\n","export const DEFAULT_VIEW = 'fixed';\nexport const DEFAULT_SIDE = 'random';\nexport const DEFAULT_MODE = 'with-AI';\nexport const DEFAULT_SOUND = 0.5;\nexport const DEFAULT_MUSIC = 0;\nexport const DEFAULT_AILEVEL = 0.5;\n","export default __webpack_public_path__ + \"static/media/rs-logo.ad178c0d.svg\";","import React from 'react';\nimport logo from '../assets/images/rs-logo.svg';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <a className=\"footer__logo\" href=\"https://rs.school/react/\">\n        <img src={logo} alt=\"RS-School\" />\n      </a>\n      <span className=\"footer__copy\">\n        Made by <a href=\"https://github.com/Liza-Veis\">@Liza-Veis</a> in 2021\n      </span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","export const SELECT_SQUARE = 'SELECT_SQUARE';\nexport const MOVE_PIECE = 'MOVE_PIECE';\nexport const MAKE_AI_MOVE = 'MAKE_AI_MOVE';\nexport const PROMOTE_PAWN = 'PROMOTE_PAWN';\nexport const START_GAME = 'START_GAME';\nexport const SURRENDER = 'SURRENDER';\nexport const UNDO = 'UNDO';\nexport const SET_VIEW = 'SET_VIEW';\nexport const SET_SIDE = 'SET_SIDE';\nexport const SET_MODE = 'SET_MODE';\nexport const SET_MUSIC = 'SET_MUSIC';\nexport const SET_SOUND = 'SET_SOUND';\nexport const SET_AI_LEVEL = 'SET_AILevel';\n","import { TMode, TPromotion, TSide, TView } from '../../AppConstants';\nimport {\n  IMakeAIMove,\n  IMovePiece,\n  IPromotePawn,\n  ISelectSquare,\n  ISetAILevel,\n  ISetMode,\n  ISetMusic,\n  ISetSide,\n  ISetSound,\n  ISetView,\n  IStartGame,\n  ISurrender,\n  IUndo,\n} from './chessActions.types';\nimport {\n  MAKE_AI_MOVE,\n  MOVE_PIECE,\n  PROMOTE_PAWN,\n  SELECT_SQUARE,\n  SET_AI_LEVEL,\n  SET_MODE,\n  SET_MUSIC,\n  SET_SIDE,\n  SET_SOUND,\n  SET_VIEW,\n  START_GAME,\n  SURRENDER,\n  UNDO,\n} from './chessActionsTypes';\n\nexport const selectSquare = (idx: number): ISelectSquare => {\n  return {\n    type: SELECT_SQUARE,\n    payload: idx,\n  };\n};\n\nexport const movePiece = (idx: number): IMovePiece => {\n  return {\n    type: MOVE_PIECE,\n    payload: idx,\n  };\n};\n\nexport const promotePawn = (data: TPromotion): IPromotePawn => {\n  return {\n    type: PROMOTE_PAWN,\n    payload: data,\n  };\n};\n\nexport const makeAIMove = (data: {\n  from: string;\n  to: string;\n  promotion: string | undefined;\n}): IMakeAIMove => {\n  return {\n    type: MAKE_AI_MOVE,\n    payload: data,\n  };\n};\n\nexport const startGame = (): IStartGame => {\n  return {\n    type: START_GAME,\n  };\n};\n\nexport const setView = (value: TView): ISetView => {\n  return {\n    type: SET_VIEW,\n    payload: value,\n  };\n};\n\nexport const setSide = (value: TSide): ISetSide => {\n  return {\n    type: SET_SIDE,\n    payload: value,\n  };\n};\n\nexport const setMode = (value: TMode): ISetMode => {\n  return {\n    type: SET_MODE,\n    payload: value,\n  };\n};\n\nexport const setMusic = (value: number): ISetMusic => {\n  return {\n    type: SET_MUSIC,\n    payload: value,\n  };\n};\n\nexport const setSound = (value: number): ISetSound => {\n  return {\n    type: SET_SOUND,\n    payload: value,\n  };\n};\n\nexport const surrender = (): ISurrender => {\n  return {\n    type: SURRENDER,\n  };\n};\n\nexport const undo = (): IUndo => {\n  return {\n    type: UNDO,\n  };\n};\n\nexport const setAILevel = (value: number): ISetAILevel => {\n  return {\n    type: SET_AI_LEVEL,\n    payload: value,\n  };\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { startGame } from '../../redux/chessActions';\nimport { TDispatch } from '../../redux/types';\n\ntype Props = {\n  startNewGame: () => void;\n};\n\nconst Home: React.FC<Props> = ({ startNewGame }: Props) => {\n  return (\n    <div className=\"main\">\n      <NavLink className=\"btn\" onClick={startNewGame} to=\"/game\">\n        New Game\n      </NavLink>\n      <NavLink className=\"btn\" to=\"/settings\">\n        Settings\n      </NavLink>\n      <NavLink className=\"btn\" to=\"/statistics\">\n        Statistics\n      </NavLink>\n      <NavLink className=\"btn\" to=\"/hotkeys\">\n        Hot keys\n      </NavLink>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    startNewGame: () => dispatch(startGame()),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Home);\n","import React from 'react';\n\ntype Props = {\n  isDark: boolean;\n  isLastMove: boolean | null;\n  children: React.ReactNode;\n  isPossibleSquare: boolean | null;\n  isCapturedSquare: boolean | null;\n  lastMoveShown: boolean;\n  possibleMovesShown: boolean;\n  handleClick: () => void;\n};\n\nconst Square: React.FC<Props> = (props: Props) => {\n  const {\n    children,\n    isDark,\n    handleClick,\n    isLastMove,\n    isPossibleSquare,\n    isCapturedSquare,\n    possibleMovesShown,\n    lastMoveShown,\n  } = props;\n\n  let className = 'square';\n  if (isDark) {\n    className += ' square--dark';\n  }\n  if (isLastMove) {\n    className += lastMoveShown ? ' square--last-move' : '';\n  }\n  if (isPossibleSquare) {\n    className += ' interactive';\n    className += possibleMovesShown ? ' square--possible' : '';\n  }\n  if (isCapturedSquare) {\n    className += ' interactive';\n    className += possibleMovesShown ? ' square--captured' : '';\n  }\n  /* eslint-disable jsx-a11y/no-static-element-interactions */\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  return (\n    <div className={className} onClick={handleClick}>\n      {children}\n    </div>\n  );\n};\n\nexport default Square;\n","import React from 'react';\nimport { TColor, TMode, TPiece, TSide } from '../../../AppConstants';\n\ntype Props = {\n  piece: TPiece;\n  isSelected: boolean;\n  turn: TColor;\n  mode: TMode;\n  side: TSide;\n};\n\nconst Piece: React.FC<Props> = ({\n  piece,\n  isSelected,\n  turn,\n  mode,\n  side,\n}: Props) => {\n  const { type, color } = piece;\n  const title = `${color}${type.toUpperCase()}`;\n  const img = `${process.env.PUBLIC_URL}/assets/${title}.png`;\n  const selectedClass = isSelected ? 'selected' : '';\n  let interactiveClass = '';\n\n  if (turn === color && mode !== 'autoplay') {\n    if (mode === 'with-AI') {\n      if (side === color) {\n        interactiveClass = 'interactive';\n      }\n    } else {\n      interactiveClass = 'interactive';\n    }\n  }\n\n  const className = `piece ${selectedClass} ${interactiveClass}`;\n\n  return (\n    <div className={className}>\n      <img src={img} alt={title} />\n    </div>\n  );\n};\n\nexport default Piece;\n","export const getXY = (\n  idx: number,\n  isReversed?: boolean\n): { x: number; y: number } => {\n  const x = !isReversed ? idx % 8 : Math.abs((idx % 8) - 7);\n  const y = !isReversed\n    ? Math.abs(Math.floor(idx / 8) - 7)\n    : Math.floor(idx / 8);\n  return { x, y };\n};\n\nexport const isDarkSquare = (idx: number): boolean => {\n  const { x, y } = getXY(idx);\n  return (x + y) % 2 === 1;\n};\n\nexport const getPosition = (idx: number, isReversed: boolean): string => {\n  const { x, y } = getXY(idx, isReversed);\n  const file = 'abcdefgh'[x];\n  return `${file}${y + 1}`;\n};\n\nexport const getIndex = (position: string, isReversed: boolean): number => {\n  const file = position[0];\n  const y = +position[1] - 1;\n  const x = 'abcdefgh'.indexOf(file);\n  return isReversed ? y * 8 + 7 - x : (7 - y) * 8 + x;\n};\n\nexport const getRandomSide = (): 'w' | 'b' => {\n  return 'wb'[Math.round(Math.random())] as 'w' | 'b';\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { TPendingPromotion, TPromotion } from '../../../AppConstants';\nimport { promotePawn } from '../../../redux/chessActions';\nimport { TDispatch } from '../../../redux/types';\n\ntype Props = {\n  data: TPendingPromotion;\n  promote: (data: TPromotion) => void;\n};\n\nconst Promotion: React.FC<Props> = ({ data, promote }: Props) => {\n  const promotionPieces = ['q', 'n', 'r', 'b'];\n  const color = data?.color;\n\n  const handleClick = (promotion: string) => {\n    if (!data) return;\n    const { from, to } = data;\n    promote({ from, to, promotion });\n  };\n  return (\n    <div className=\"promotion\">\n      <div className=\"promotion__body\">\n        <h2 className=\"promotion__title\">Pawn promotion</h2>\n        <div className=\"promotion__box\">\n          {promotionPieces.map((piece, idx) => {\n            const title = `${color}${piece.toUpperCase()}`;\n            /* eslint-disable jsx-a11y/no-static-element-interactions */\n            /* eslint-disable jsx-a11y/click-events-have-key-events */\n            return (\n              <div\n                key={idx}\n                className=\"promotion__item interactive\"\n                onClick={() => handleClick(piece)}\n              >\n                <img src={`./assets/${title}.png`} alt={title} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    promote: (data: TPromotion) => dispatch(promotePawn(data)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Promotion);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { TState } from '../../../redux/types';\n\ntype Props = {\n  result: string | null;\n};\n\nconst GameOver: React.FC<Props> = ({ result }: Props) => {\n  return (\n    <div className=\"game-over\">\n      <div className=\"game-over__body\">\n        <h2 className=\"game-over__title\">Game Over</h2>\n        <span className=\"game-over__result\">{result}</span>\n        <NavLink to=\"/\" className=\"btn game-over__btn\">\n          Menu\n        </NavLink>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    result: state.result,\n  };\n};\n\nexport default connect(mapStateToProps)(GameOver);\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { TDispatch, TState } from '../../../redux/types';\nimport Square from './Square';\nimport Piece from './Piece';\nimport { movePiece, selectSquare } from '../../../redux/chessActions';\nimport { isDarkSquare } from '../../../utils';\nimport Promotion from './Promotion';\nimport GameOver from './GameOver';\nimport {\n  TBoard,\n  TColor,\n  TMode,\n  TPendingPromotion,\n  TPiece,\n  TSide,\n} from '../../../AppConstants';\n\ntype Props = {\n  board: TBoard;\n  selectedSquare: number | null;\n  promotion: TPendingPromotion;\n  turn: TColor;\n  isGameOver: boolean;\n  mode: TMode;\n  side: TSide;\n  isSurrender: boolean;\n  lastMove: [number, number] | null;\n  possibleMoves: number[] | null;\n  capturedMoves: number[] | null;\n  lastMoveShown: boolean;\n  possibleMovesShown: boolean;\n  selectSquare: (idx: number) => void;\n  movePiece: (idx: number) => void;\n};\n\nconst Board: React.FC<Props> = (props: Props) => {\n  const {\n    board,\n    selectedSquare,\n    promotion,\n    turn,\n    isGameOver,\n    mode,\n    side,\n    isSurrender,\n    lastMove,\n    possibleMoves,\n    capturedMoves,\n    lastMoveShown,\n    possibleMovesShown,\n  } = props;\n\n  const [isShownGameOver, setIsShownGameOver] = useState(isGameOver);\n\n  useEffect(() => {\n    const time = isSurrender ? 0 : 1000;\n    const timeout = setTimeout(() => {\n      setIsShownGameOver(isGameOver);\n    }, time);\n    return () => clearTimeout(timeout);\n  }, [isGameOver, isSurrender]);\n\n  const handleClick = (piece: TPiece | null, idx: number) => {\n    if (mode === 'autoplay') {\n      return;\n    }\n    if (selectedSquare === idx || (mode === 'with-AI' && turn !== side)) {\n      return;\n    }\n    if (!piece) {\n      props.movePiece(idx);\n      return;\n    }\n    if (piece.color !== turn) {\n      if (selectedSquare) {\n        props.movePiece(idx);\n      }\n      return;\n    }\n\n    const targetPiece = board[idx];\n    if (targetPiece && targetPiece.color === piece.color) {\n      props.selectSquare(idx);\n    } else if (selectedSquare) {\n      props.movePiece(idx);\n    }\n  };\n\n  return (\n    <div className=\"board\">\n      {board.map((piece, idx) => (\n        <Square\n          key={idx}\n          isDark={isDarkSquare(idx)}\n          handleClick={() => handleClick(piece, idx)}\n          isLastMove={lastMove && lastMove.includes(idx)}\n          isPossibleSquare={possibleMoves && possibleMoves.includes(idx)}\n          isCapturedSquare={capturedMoves && capturedMoves.includes(idx)}\n          lastMoveShown={lastMoveShown}\n          possibleMovesShown={possibleMovesShown}\n        >\n          {piece && (\n            <Piece\n              piece={piece}\n              turn={turn}\n              isSelected={selectedSquare === idx}\n              mode={mode}\n              side={side}\n            />\n          )}\n        </Square>\n      ))}\n      {promotion && <Promotion data={promotion} />}\n      {isShownGameOver && <GameOver />}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    board: state.board,\n    selectedSquare: state.selectedSquare,\n    promotion: state.promotion,\n    turn: state.turn,\n    isGameOver: state.isGameOver,\n    mode: state.mode,\n    side: state.actualSide,\n    isSurrender: state.isSurrender,\n    lastMove: state.lastMove,\n    possibleMoves: state.posibleMoves,\n    capturedMoves: state.capturedMoves,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    selectSquare: (idx: number) => dispatch(selectSquare(idx)),\n    movePiece: (idx: number) => dispatch(movePiece(idx)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);\n","const stockfish = new Worker(`${process.env.PUBLIC_URL}/stockfish.js`);\n\nstockfish.postMessage('uci');\nstockfish.postMessage('ucinewgame');\nstockfish.postMessage('setoption name MultiPV value 3');\nstockfish.postMessage('setoption name Minimum Thinking Time value 500');\n\nexport default stockfish;\n","import stockfish from './index';\n\nexport const generateAIMove = (fen: string): void => {\n  stockfish.postMessage(`position fen ${fen}`);\n  stockfish.postMessage('go wtime 3000 btime 3000 winc 1000 binc 1000');\n};\n\nexport const setAISkillLevel = (value: number): void => {\n  const level = value * 20;\n  stockfish.postMessage(`setoption name Skill Level value ${level}`);\n\n  const errorProbab = Math.round(level * 6.35 + 1);\n  const maxErr = Math.round(level * -0.5 + 10);\n\n  stockfish.postMessage(\n    `setoption name Skill Level Maximum Error value ${maxErr}`\n  );\n  stockfish.postMessage(\n    `setoption name Skill Level Probability value ${errorProbab}`\n  );\n};\n\nexport const stopSearching = (): void => {\n  stockfish.postMessage('quit');\n};\n","import { useCallback, useEffect } from 'react';\n\nconst useHotkeys = (code: string, callback: () => void): void => {\n  const handleKeydown = useCallback(\n    (e: KeyboardEvent) => {\n      if (e.code === code) {\n        callback();\n      }\n    },\n    [code, callback]\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeydown, true);\n    return () => document.removeEventListener('keydown', handleKeydown, true);\n  }, [handleKeydown]);\n};\n\nexport default useHotkeys;\n","import React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { TDispatch, TState } from '../../redux/types';\nimport Board from './components/Board';\nimport { stopSearching } from '../../AI/sendMessage';\nimport { surrender, undo } from '../../redux/chessActions';\nimport useHotkeys from '../../hooks/useHotkeys';\nimport { TMode } from '../../AppConstants';\n\ntype Props = {\n  isGameOver: boolean;\n  mode: TMode;\n  surrender: () => void;\n  undo: () => void;\n};\n\nconst Game: React.FC<Props> = (props: Props) => {\n  const { isGameOver, mode, undo: undoFn, surrender: surrenderFn } = props;\n\n  const [isLastMoveShown, setIsLastMoveShown] = useState(true);\n  const [isPossibleMovesShown, setIsPossibleMovesShown] = useState(true);\n\n  useHotkeys('KeyH', () => setIsLastMoveShown(!isLastMoveShown));\n  useHotkeys('KeyM', () => setIsPossibleMovesShown(!isPossibleMovesShown));\n\n  const [moveTimeout, setMoveTimeout] = useState<ReturnType<\n    typeof setTimeout\n  > | null>();\n\n  const handleUndo = useCallback(() => {\n    if (moveTimeout) return;\n    undoFn();\n    if (mode === 'with-AI') {\n      const timeout = setTimeout(() => {\n        undoFn();\n        setMoveTimeout(null);\n      }, 800);\n      setMoveTimeout(timeout);\n    }\n  }, [mode, undoFn, moveTimeout]);\n\n  useHotkeys('KeyS', surrenderFn);\n  useHotkeys('KeyU', handleUndo);\n\n  const handleClick = () => {\n    surrenderFn();\n    stopSearching();\n  };\n\n  return (\n    <div className=\"game\">\n      <Board\n        lastMoveShown={isLastMoveShown}\n        possibleMovesShown={isPossibleMovesShown}\n      />\n      {!isGameOver && (\n        <button className=\"btn game__btn\" onClick={handleClick} type=\"button\">\n          Surrender\n        </button>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    isGameOver: state.isGameOver,\n    mode: state.mode,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    surrender: () => dispatch(surrender()),\n    undo: () => dispatch(undo()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  value: string;\n  checked: boolean;\n  label: string;\n};\n\nconst RadioInput: React.FC<Props> = (props: Props) => {\n  const { name, value, checked, label } = props;\n  /* eslint-disable jsx-a11y/label-has-associated-control */\n  return (\n    <label>\n      <input type=\"radio\" name={name} value={value} defaultChecked={checked} />\n      {label}\n    </label>\n  );\n};\n\nexport default RadioInput;\n","import React from 'react';\nimport { TSide } from '../../../AppConstants';\nimport RadioInput from './inputs/RadioInput';\n\ntype Props = {\n  side: TSide;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst AiSettings: React.FC<Props> = ({ handleChange, side }: Props) => {\n  return (\n    <>\n      <div className=\"settings__item\">\n        <h3 className=\"settings__title\">Side</h3>\n        <div className=\"settings__box\" onChange={handleChange}>\n          <RadioInput\n            name=\"side\"\n            value=\"w\"\n            checked={side === 'w'}\n            label=\"White\"\n          />\n          <RadioInput\n            name=\"side\"\n            value=\"b\"\n            checked={side === 'b'}\n            label=\"Black\"\n          />\n          <RadioInput\n            name=\"side\"\n            value=\"random\"\n            checked={side === 'random'}\n            label=\"Random\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AiSettings;\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  value: number;\n  label: string;\n};\n\nconst RangeInput: React.FC<Props> = ({ name, value, label }: Props) => {\n  /* eslint-disable jsx-a11y/label-has-associated-control */\n  return (\n    <label>\n      {label}\n      <input\n        type=\"range\"\n        name={name}\n        min=\"0\"\n        max=\"1\"\n        step=\"0.1\"\n        defaultValue={value}\n      />\n    </label>\n  );\n};\n\nexport default RangeInput;\n","import React from 'react';\nimport RangeInput from './inputs/RangeInput';\n\ntype Props = {\n  music: number;\n  sound: number;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst AudioSettings: React.FC<Props> = (props: Props) => {\n  const { handleChange, music, sound } = props;\n\n  return (\n    <div className=\"settings__item audio\">\n      <h3 className=\"settings__title\">Audio</h3>\n      <div className=\"settings__box\" onChange={handleChange}>\n        <RangeInput name=\"music\" value={music} label=\"Music:\" />\n        <RangeInput name=\"sound\" value={sound} label=\"Sound:\" />\n      </div>\n    </div>\n  );\n};\n\nexport default AudioSettings;\n","import React, { useState } from 'react';\n\ntype Props = {\n  fullscreen: [boolean, () => void];\n};\n\nconst FullscreenSettings: React.FC<Props> = ({ fullscreen }: Props) => {\n  const [isFullscreen, setIsFullscreen] = fullscreen;\n  const [isChecked, setIsChecked] = useState(isFullscreen);\n\n  const handleClick = () => {\n    setIsChecked(!isChecked);\n    if (isFullscreen === isChecked) {\n      setIsFullscreen();\n    }\n  };\n\n  /* eslint-disable jsx-a11y/click-events-have-key-events */\n  /* eslint-disable jsx-a11y/no-static-element-interactions */\n  return (\n    <div className=\"settings__item\">\n      <h3 className=\"settings__title\">Fullscreen</h3>\n      <div className=\"settings__box\">\n        <label htmlFor=\"fullscreen\">\n          <input\n            type=\"radio\"\n            id=\"fullscreen\"\n            onClick={handleClick}\n            defaultChecked={isChecked}\n          />\n          Enable\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default FullscreenSettings;\n","import React from 'react';\nimport { TMode } from '../../../AppConstants';\nimport RadioInput from './inputs/RadioInput';\n\ntype Props = {\n  mode: TMode;\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst ModeSettings: React.FC<Props> = (props: Props) => {\n  const { handleChange, mode } = props;\n\n  return (\n    <div className=\"settings__item\">\n      <h3 className=\"settings__title\">Mode</h3>\n      <div className=\"settings__box\" onChange={handleChange}>\n        <RadioInput\n          name=\"mode\"\n          value=\"with-AI\"\n          checked={mode === 'with-AI'}\n          label=\"With AI\"\n        />\n\n        <RadioInput\n          name=\"mode\"\n          value=\"two-players\"\n          checked={mode === 'two-players'}\n          label=\"Two players\"\n        />\n\n        <RadioInput\n          name=\"mode\"\n          value=\"autoplay\"\n          checked={mode === 'autoplay'}\n          label=\"Autoplay\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default ModeSettings;\n","import React from 'react';\nimport { TView } from '../../../AppConstants';\nimport RadioInput from './inputs/RadioInput';\n\ntype Props = {\n  handleChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  view: TView;\n};\n\nconst TwoPlayersSettings: React.FC<Props> = ({ handleChange, view }: Props) => {\n  return (\n    <>\n      <div className=\"settings__item\">\n        <h3 className=\"settings__title\">View</h3>\n        <div className=\"settings__box\" onChange={handleChange}>\n          <RadioInput\n            name=\"view\"\n            value=\"auto-rotate\"\n            checked={view === 'auto-rotate'}\n            label=\"Auto rotate\"\n          />\n          <RadioInput\n            name=\"view\"\n            value=\"fixed\"\n            checked={view === 'fixed'}\n            label=\"Fixed\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TwoPlayersSettings;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { TMode, TSide, TView } from '../../AppConstants';\nimport {\n  setAILevel,\n  setMode,\n  setMusic,\n  setSide,\n  setSound,\n  setView,\n} from '../../redux/chessActions';\nimport { TDispatch, TState } from '../../redux/types';\nimport AiSettings from './components/AiSettings';\nimport AudioSettings from './components/AudioSettings';\nimport FullscreenSettings from './components/FullscreenSettings';\nimport RangeInput from './components/inputs/RangeInput';\nimport ModeSettings from './components/ModeSettings';\nimport TwoPlayersSettings from './components/TwoPlayersSettings';\n\ntype Props = {\n  side: TSide;\n  view: TView;\n  mode: TMode;\n  sound: number;\n  music: number;\n  fullscreen: [boolean, () => void];\n  AILevel: number;\n  setView: (value: TView) => void;\n  setSide: (value: TSide) => void;\n  setMode: (value: TMode) => void;\n  setMusic: (value: number) => void;\n  setSound: (value: number) => void;\n  setAILevel: (value: number) => void;\n};\n\nconst Settings: React.FC<Props> = (props: Props) => {\n  const { side, view, mode, sound, music, fullscreen, AILevel } = props;\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    switch (e.target.name) {\n      case 'view': {\n        props.setView(e.target.value as TView);\n        break;\n      }\n      case 'side': {\n        props.setSide(e.target.value as TSide);\n        break;\n      }\n      case 'mode': {\n        props.setMode(e.target.value as TMode);\n        break;\n      }\n      case 'music': {\n        props.setMusic(+e.target.value);\n        break;\n      }\n      case 'sound': {\n        props.setSound(+e.target.value);\n        break;\n      }\n      case 'AILevel': {\n        props.setAILevel(+e.target.value);\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  };\n\n  return (\n    <div className=\"settings\">\n      <NavLink className=\"btn btn--back\" to=\"/\">\n        Back\n      </NavLink>\n\n      <ModeSettings handleChange={handleChange} mode={mode} />\n      {mode === 'with-AI' && (\n        <AiSettings handleChange={handleChange} side={side} />\n      )}\n      {mode === 'two-players' && (\n        <TwoPlayersSettings handleChange={handleChange} view={view} />\n      )}\n      {mode !== 'two-players' && (\n        <div className=\"settings__item\">\n          <h3 className=\"settings__title\">AI Level</h3>\n          <div className=\"settings__box\" onChange={handleChange}>\n            <RangeInput name=\"AILevel\" value={AILevel} label=\"\" />\n          </div>\n        </div>\n      )}\n\n      <AudioSettings handleChange={handleChange} music={music} sound={sound} />\n      <FullscreenSettings fullscreen={fullscreen} />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    side: state.side,\n    view: state.view,\n    mode: state.mode,\n    sound: state.sound,\n    music: state.music,\n    AILevel: state.AILevel,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    setSide: (value: TSide) => dispatch(setSide(value)),\n    setView: (value: TView) => dispatch(setView(value)),\n    setMode: (value: TMode) => dispatch(setMode(value)),\n    setSound: (value: number) => dispatch(setSound(value)),\n    setMusic: (value: number) => dispatch(setMusic(value)),\n    setAILevel: (value: number) => dispatch(setAILevel(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\n","import React, { useLayoutEffect, useState } from 'react';\n\nconst useFullscreen = (\n  elRef: React.RefObject<HTMLElement>\n): [boolean, () => void] => {\n  const [isFullscreen, setIsFullscreen] = useState(\n    document.fullscreenElement !== null\n  );\n\n  const setFullscreen = () => {\n    if (elRef.current === null) return;\n    if (!isFullscreen) {\n      elRef.current\n        .requestFullscreen()\n        .then(() => setIsFullscreen(document.fullscreenElement !== null));\n    } else {\n      document.exitFullscreen().then(() => setIsFullscreen(false));\n    }\n  };\n\n  useLayoutEffect(() => {\n    document.onfullscreenchange = () => {\n      setIsFullscreen(document.fullscreenElement !== null);\n\n      return () => {\n        document.onfullscreenchange = null;\n      };\n    };\n  });\n\n  return [isFullscreen, setFullscreen];\n};\n\nexport default useFullscreen;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { TStatistics, TStatisticsHeader } from '../../AppConstants';\nimport { TState } from '../../redux/types';\n\ntype Props = {\n  statistics: TStatistics;\n};\n\nconst Statistics: React.FC<Props> = ({ statistics }: Props) => {\n  const headers: TStatisticsHeader[] = ['date', 'mode', 'side', 'winner'];\n\n  return (\n    <div className=\"statistics\">\n      <NavLink className=\"btn btn--back\" to=\"/\">\n        Back\n      </NavLink>\n      <table className=\"statistics__table\">\n        <thead>\n          <tr>\n            <th className=\"statistics__header\">№</th>\n            {headers.map((header, idx) => (\n              <th key={idx} className=\"statistics__header\">\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {statistics.map((row, idx) => {\n            return (\n              <tr key={idx}>\n                <td className=\"statistics__number\">{idx + 1}</td>\n                {headers.map((header, i) => (\n                  <td key={i} className=\"statistics__cell\">\n                    {row[header].toString()}\n                  </td>\n                ))}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    statistics: state.statistics,\n  };\n};\n\nexport default connect(mapStateToProps)(Statistics);\n","import React from 'react';\nimport {\n  BiUpArrow,\n  BiDownArrow,\n  BiLeftArrow,\n  BiRightArrow,\n} from 'react-icons/bi';\nimport { NavLink } from 'react-router-dom';\n\nconst HotKeys: React.FC = () => {\n  return (\n    <div className=\"hot-keys\">\n      <NavLink className=\"btn btn--back\" to=\"/\">\n        Back\n      </NavLink>\n      <ul className=\"hot-keys__list\">\n        <li className=\"hot-keys__item\">\n          <span>U</span>\n          <span>Undo move</span>\n        </li>\n        <li className=\"hot-keys__item\">\n          <span>S</span>\n          <span>Surrender</span>\n        </li>\n        <li className=\"hot-keys__item\">\n          <span>H</span>\n          <span>Hide last move</span>\n        </li>\n        <li className=\"hot-keys__item\">\n          <span>M</span>\n          <span>Hide possible moves</span>\n        </li>\n        <li className=\"hot-keys__item\">\n          <span>\n            <BiUpArrow />\n            <BiDownArrow />\n          </span>\n          <span>Set music volume</span>\n        </li>\n        <li className=\"hot-keys__item\">\n          <span>\n            <BiLeftArrow />\n            <BiRightArrow />\n          </span>\n          <span>Set sound volume</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default HotKeys;\n","import React, { useRef } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Footer from './components/Footer';\nimport Home from './components/Home';\nimport Game from './components/Game';\nimport Settings from './components/Settings';\nimport useFullscreen from './hooks/useFullscreen';\nimport Statistics from './components/Statistics';\nimport { TDispatch, TState } from './redux/types';\nimport { setMusic, setSound } from './redux/chessActions';\nimport useHotkeys from './hooks/useHotkeys';\nimport HotKeys from './components/HotKeys';\n\ntype Props = {\n  music: number;\n  sound: number;\n  setMusic: (value: number) => void;\n  setSound: (value: number) => void;\n};\n\nconst App: React.FC<Props> = (props: Props) => {\n  const { music, sound } = props;\n\n  useHotkeys('ArrowUp', () => props.setMusic(Math.min(music + 0.1, 1)));\n  useHotkeys('ArrowDown', () => props.setMusic(Math.max(music - 0.1, 0)));\n  useHotkeys('ArrowRight', () => props.setSound(Math.min(sound + 0.1, 1)));\n  useHotkeys('ArrowLeft', () => props.setSound(Math.max(sound - 0.1, 0)));\n\n  const AppRef = useRef<HTMLDivElement>(null);\n  const fullscreen = useFullscreen(AppRef);\n\n  return (\n    <div className=\"App\" ref={AppRef}>\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/statistics\" component={Statistics} />\n        <Route path=\"/settings\">\n          <Settings fullscreen={fullscreen} />\n        </Route>\n        <Route path=\"/hotkeys\" component={HotKeys} />\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: TState) => {\n  return {\n    music: state.music,\n    sound: state.sound,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: TDispatch) => {\n  return {\n    setMusic: (value: number) => dispatch(setMusic(value)),\n    setSound: (value: number) => dispatch(setSound(value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/move.a7304208.wav\";","export default __webpack_public_path__ + \"static/media/music.69eab84e.mp3\";","import * as Chess from 'chess.js';\nimport { generateAIMove, setAISkillLevel } from '../AI/sendMessage';\nimport {\n  DEFAULT_MODE,\n  DEFAULT_SIDE,\n  DEFAULT_VIEW,\n  TColor,\n  TMode,\n  TBoard,\n  TSide,\n  TView,\n  TStatistics,\n  TStatisticsField,\n  DEFAULT_AILEVEL,\n} from '../AppConstants';\nimport { getRandomSide } from '../utils';\nimport moveSound from '../assets/audio/move.wav';\nimport music from '../assets/audio/music.mp3';\n\ntype TBoardProps = {\n  view: TView;\n  turn: TColor;\n  mode: TMode;\n  actualSide: TSide;\n};\n\nconst getStoredItem = (name: string): any => {\n  if (name === 'fen') {\n    return localStorage.getItem(`react-chess-${name}`);\n  }\n  if (name === 'statistics') {\n    const statisticsJSON = localStorage.getItem('react-chess-statistics');\n    return JSON.parse(statisticsJSON || '[]');\n  }\n  const settingsJSON = localStorage.getItem('react-chess-settings');\n  if (!settingsJSON) {\n    return null;\n  }\n  const settings = JSON.parse(settingsJSON);\n  return settings[name] || null;\n};\n\nconst storeItem = <U, T>(name: U, value: T): void => {\n  if (typeof name !== 'string') {\n    return;\n  }\n  if (name === 'fen' && typeof value === 'string') {\n    localStorage.setItem('react-chess-fen', value);\n    return;\n  }\n  if (name === 'statistics') {\n    localStorage.setItem('react-chess-statistics', JSON.stringify(value));\n    return;\n  }\n  const settingsJSON = localStorage.getItem('react-chess-settings') || '{}';\n  const settings = JSON.parse(settingsJSON);\n  const newSettings = { ...settings, [name]: value };\n  localStorage.setItem('react-chess-settings', JSON.stringify(newSettings));\n};\n\nconst AILevel = getStoredItem('AILevel');\nconst startSettings = {\n  fen: getStoredItem('fen') || undefined,\n  view: (getStoredItem('view') || DEFAULT_VIEW) as TView,\n  mode: (getStoredItem('mode') || DEFAULT_MODE) as TMode,\n  side: (getStoredItem('side') || DEFAULT_SIDE) as TSide,\n  AILevel: (!AILevel && AILevel !== 0 ? DEFAULT_AILEVEL : AILevel) as number,\n  actualSide: getStoredItem('actualSide') as TColor,\n  statistics: (getStoredItem('statistics') || []) as TStatistics,\n};\n\nif (!startSettings.actualSide) {\n  const { side } = startSettings;\n  startSettings.actualSide = side === 'random' ? getRandomSide() : side;\n}\n\nsetAISkillLevel(startSettings.AILevel);\n\nconst audio = {\n  move: new Audio(moveSound),\n  music: new Audio(music),\n};\n\naudio.music.loop = true;\n\nconst isReversed = (props: TBoardProps): boolean => {\n  const { mode, view, turn, actualSide } = props;\n  if (mode === 'autoplay') {\n    return false;\n  }\n  if (mode !== 'with-AI' && view === 'auto-rotate' && turn !== 'w') {\n    return true;\n  }\n  if (mode === 'with-AI' && actualSide === 'b') {\n    return true;\n  }\n  return false;\n};\n\nconst chess = new (Chess as any)(startSettings.fen);\n\nconst saveToStatistics = (props: {\n  mode: TMode;\n  side: TColor | '-';\n  winner: TColor | '-';\n}): void => {\n  const statisticsField: TStatisticsField = {\n    ...props,\n    date: new Date().toLocaleString('ru-Ru', {\n      month: 'numeric',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n    }),\n  };\n\n  const statistics = getStoredItem('statistics');\n  statistics.unshift(statisticsField);\n  storeItem('statistics', statistics.slice(0, 10));\n};\n\nconst getBoard = (data: TBoardProps): TBoard => {\n  const board = chess.board().flat();\n  if (isReversed(data)) {\n    return board.reverse();\n  }\n  return board;\n};\n\nconst getResults = (props: { mode: TMode; actualSide: TColor }): string => {\n  const side = props.mode === 'with-AI' ? props.actualSide : '-';\n\n  if (chess.in_checkmate()) {\n    const winner = chess.turn() === 'w' ? 'b' : 'w';\n    saveToStatistics({ mode: props.mode, side, winner });\n\n    return `CHECKMATE: WINNER - ${winner === 'b' ? 'BLACK' : 'WHITE'}`;\n  }\n  if (chess.in_draw()) {\n    let reason = '50 MOVES RULE';\n    if (chess.in_stalemate()) {\n      reason = 'STALEMATE';\n    } else if (chess.in_threefold_repetition()) {\n      reason = 'THREEFOLD REPETITION';\n    } else if (chess.insufficient_material()) {\n      reason = 'INSUFFICIENT MATERIAL';\n    }\n    saveToStatistics({ mode: props.mode, side, winner: '-' });\n    return `DRAW - ${reason}`;\n  }\n\n  saveToStatistics({ mode: props.mode, side, winner: '-' });\n  return 'UNKNOWN REASON';\n};\n\n// make move after reload if ai turn\nif (\n  window.location.pathname.includes('/game') &&\n  startSettings.mode !== 'two-players'\n) {\n  if (\n    startSettings.mode === 'autoplay' ||\n    chess.turn() !== startSettings.actualSide\n  ) {\n    generateAIMove(chess.fen());\n  }\n}\n\nexport {\n  chess,\n  startSettings,\n  audio,\n  storeItem,\n  getStoredItem,\n  isReversed,\n  getBoard,\n  getResults,\n  saveToStatistics,\n};\n","import { Move, ShortMove, Square } from 'chess.js';\nimport { generateAIMove, setAISkillLevel } from '../AI/sendMessage';\nimport { getIndex, getPosition, getRandomSide } from '../utils';\nimport {\n  audio,\n  chess,\n  getBoard,\n  getResults,\n  getStoredItem,\n  isReversed,\n  startSettings,\n  storeItem,\n  saveToStatistics,\n} from './setup';\nimport {\n  SELECT_SQUARE,\n  MOVE_PIECE,\n  PROMOTE_PAWN,\n  START_GAME,\n  SET_VIEW,\n  SET_SIDE,\n  SET_MODE,\n  MAKE_AI_MOVE,\n  SURRENDER,\n  SET_SOUND,\n  SET_MUSIC,\n  UNDO,\n  SET_AI_LEVEL,\n} from './chessActions/chessActionsTypes';\nimport {\n  DEFAULT_AILEVEL,\n  DEFAULT_MODE,\n  DEFAULT_MUSIC,\n  DEFAULT_SIDE,\n  DEFAULT_SOUND,\n  DEFAULT_VIEW,\n  TColor,\n  TMode,\n  TPendingPromotion,\n  TSide,\n  TView,\n} from '../AppConstants';\nimport { TActions } from './chessActions/chessActions.types';\n\n// const promotion = 'rnb2bnr/pppPkppp/8/4p3/7q/8/PPPP1PPP/RNBQKBNR w KQ - 1 5';\n// const stalemate = '4k3/4P3/8/4K3/8/8/8/8 w - - 0 78';\n// const material = 'k7/8/n7/8/8/8/8/7K b - - 0 1';\n// const checkmate =\n//   'rnb1kbnr/pppp1ppp/8/4p1q1/5PP1/8/PPPPP2P/RNBQKBNR b KQkq - 1 3';\n\nconst initialState = {\n  board: getBoard({\n    view: startSettings.view,\n    turn: chess.turn(),\n    mode: startSettings.mode,\n    actualSide: startSettings.actualSide,\n  }),\n  selectedSquare: null as number | null,\n  promotion: null as TPendingPromotion,\n  turn: chess.turn(),\n  view: startSettings.view,\n  side: startSettings.side,\n  actualSide: startSettings.actualSide,\n  mode: startSettings.mode,\n  isGameOver: false,\n  result: null as string | null,\n  isSurrender: false,\n  music: DEFAULT_MUSIC,\n  sound: DEFAULT_SOUND,\n  statistics: startSettings.statistics,\n  lastMove: null as [number, number] | null,\n  posibleMoves: null as number[] | null,\n  capturedMoves: null as number[] | null,\n  AILevel: startSettings.AILevel,\n};\n\nconst chessReducer = (\n  state = initialState,\n  action: TActions\n): typeof initialState => {\n  switch (action.type) {\n    case START_GAME: {\n      chess.reset();\n      storeItem('fen', '');\n\n      const side: TSide = getStoredItem('side') || DEFAULT_SIDE;\n      const view: TView = getStoredItem('view') || DEFAULT_VIEW;\n      const mode: TMode = getStoredItem('mode') || DEFAULT_MODE;\n      const AILevel: TMode = getStoredItem('AILevel') ?? DEFAULT_AILEVEL;\n\n      const actualSide: TColor = side === 'random' ? getRandomSide() : side;\n      storeItem('actualSide', actualSide);\n      storeItem('mode', mode);\n      storeItem('view', view);\n      storeItem('side', side);\n      storeItem('AILevel', AILevel);\n\n      if (mode === 'autoplay' || (mode === 'with-AI' && actualSide === 'b')) {\n        generateAIMove(chess.fen());\n      }\n\n      const boardProps = {\n        view: state.view,\n        turn: chess.turn(),\n        mode,\n        actualSide,\n      };\n\n      return {\n        ...state,\n        selectedSquare: null,\n        promotion: null,\n        turn: chess.turn(),\n        view,\n        side,\n        actualSide,\n        mode,\n        board: getBoard(boardProps),\n        isGameOver: false,\n        result: null,\n        isSurrender: false,\n        lastMove: null,\n        posibleMoves: null,\n        capturedMoves: null,\n      };\n    }\n\n    case SELECT_SQUARE: {\n      const { view, mode, actualSide, turn } = state;\n      const isReversedBoard = isReversed({ view, mode, actualSide, turn });\n      const moves = chess.moves({\n        square: getPosition(action.payload, isReversedBoard),\n        verbose: true,\n      });\n\n      const posibleMoves: number[] = [];\n      const capturedMoves: number[] = [];\n\n      moves.forEach((move: Move) => {\n        if (move.captured) {\n          capturedMoves.push(getIndex(move.to, isReversedBoard));\n        } else {\n          posibleMoves.push(getIndex(move.to, isReversedBoard));\n        }\n      });\n\n      return {\n        ...state,\n        selectedSquare: action.payload,\n        posibleMoves,\n        capturedMoves,\n      };\n    }\n\n    case MOVE_PIECE: {\n      const { selectedSquare, view, turn, mode, actualSide } = state;\n\n      if (!selectedSquare || selectedSquare === action.payload) {\n        return state;\n      }\n\n      let isReversedBoard = isReversed({ view, turn, mode, actualSide });\n      const from = getPosition(selectedSquare, isReversedBoard) as Square;\n      const to = getPosition(action.payload, isReversedBoard) as Square;\n\n      const promotions = chess\n        .moves({ square: from, verbose: true })\n        .filter((m: ShortMove) => m.promotion);\n\n      if (promotions.length > 0) {\n        audio.move.play().then().catch();\n        const { color } = promotions[0];\n        return {\n          ...state,\n          promotion: { from, to, color },\n        };\n      }\n\n      const isLegal = chess.move({ from, to });\n      if (!isLegal) {\n        return {\n          ...state,\n          selectedSquare: null,\n          posibleMoves: null,\n          capturedMoves: null,\n        };\n      }\n\n      storeItem('fen', chess.fen());\n      const isGameOver = chess.game_over();\n      if (state.sound) {\n        audio.move.play().then().catch();\n      }\n\n      if (!isGameOver && mode === 'with-AI' && chess.turn() !== actualSide) {\n        generateAIMove(chess.fen());\n      }\n\n      const boardProps = {\n        view: state.view,\n        turn: chess.turn(),\n        mode,\n        actualSide,\n      };\n\n      if (view === 'auto-rotate' && mode === 'two-players') {\n        isReversedBoard = !isReversedBoard;\n      }\n\n      return {\n        ...state,\n        selectedSquare: null,\n        turn: chess.turn(),\n        board: getBoard(boardProps),\n        isGameOver,\n        statistics: isGameOver ? getStoredItem('statistics') : state.statistics,\n        result: isGameOver ? getResults({ mode, actualSide }) : null,\n        lastMove: [\n          getIndex(from, isReversedBoard),\n          getIndex(to, isReversedBoard),\n        ],\n        posibleMoves: null,\n        capturedMoves: null,\n      };\n    }\n\n    case PROMOTE_PAWN: {\n      const { from, to, promotion } = action.payload as ShortMove;\n\n      chess.move({ from, to, promotion });\n      localStorage.setItem('react-chess-fen', chess.fen());\n      const isGameOver = chess.game_over();\n\n      const { mode, actualSide } = state;\n\n      if (\n        !isGameOver &&\n        ((mode === 'with-AI' && chess.turn() !== actualSide) ||\n          mode === 'autoplay')\n      ) {\n        generateAIMove(chess.fen());\n      }\n\n      const boardProps = {\n        view: state.view,\n        turn: chess.turn(),\n        mode,\n        actualSide,\n      };\n\n      const isReversedBoard = isReversed(boardProps);\n\n      return {\n        ...state,\n        selectedSquare: null,\n        promotion: null,\n        turn: chess.turn(),\n        board: getBoard(boardProps),\n        isGameOver,\n        statistics: isGameOver ? getStoredItem('statistics') : state.statistics,\n        result: isGameOver ? getResults({ mode, actualSide }) : null,\n        lastMove: [\n          getIndex(from, isReversedBoard),\n          getIndex(to, isReversedBoard),\n        ],\n        posibleMoves: null,\n        capturedMoves: null,\n      };\n    }\n\n    case MAKE_AI_MOVE: {\n      if (state.isSurrender) {\n        return { ...state };\n      }\n\n      chess.move(action.payload as ShortMove);\n\n      chess.move(action.payload as ShortMove);\n      storeItem('fen', chess.fen());\n      if (state.sound) {\n        audio.move.play().then().catch();\n      }\n\n      const isGameOver = chess.game_over();\n      const { mode, actualSide, view } = state;\n\n      const boardProps = {\n        view,\n        mode,\n        actualSide,\n        turn: chess.turn(),\n      };\n\n      const { from, to } = action.payload;\n      let isReversedBoard = isReversed(boardProps);\n      if (view === 'auto-rotate' && mode === 'two-players') {\n        isReversedBoard = !isReversedBoard;\n      }\n\n      if (!isGameOver && mode === 'autoplay') {\n        generateAIMove(chess.fen());\n      }\n\n      return {\n        ...state,\n        promotion: null,\n        turn: chess.turn(),\n        board: getBoard(boardProps),\n        isGameOver,\n        statistics: isGameOver ? getStoredItem('statistics') : state.statistics,\n        result: isGameOver ? getResults({ mode, actualSide }) : null,\n        lastMove: [\n          getIndex(from, isReversedBoard),\n          getIndex(to, isReversedBoard),\n        ],\n      };\n    }\n\n    case SURRENDER: {\n      let result = 'WINNER - ';\n      let winner = '-' as TColor | '-';\n      if (state.mode === 'with-AI') {\n        winner = state.actualSide === 'w' ? 'b' : 'w';\n      } else if (state.mode !== 'autoplay') {\n        winner = state.turn === 'w' ? 'b' : 'w';\n      }\n\n      if (winner === 'b') {\n        result += 'BLACK';\n      } else if (winner === 'w') {\n        result += 'WHITE';\n      } else {\n        result = 'DRAW';\n      }\n\n      const side = state.mode === 'with-AI' ? state.actualSide : '-';\n      saveToStatistics({ mode: state.mode, side, winner });\n\n      return {\n        ...state,\n        isSurrender: true,\n        isGameOver: true,\n        result,\n        statistics: getStoredItem('statistics'),\n      };\n    }\n\n    case UNDO: {\n      const { mode, isGameOver, promotion, turn, actualSide, view } = state;\n      if (mode === 'autoplay') {\n        return { ...state };\n      }\n      const history = chess.history({ verbose: true });\n      if (history.length < 1) {\n        return {\n          ...state,\n          lastMove: null,\n          posibleMoves: null,\n          capturedMoves: null,\n        };\n      }\n      if (isGameOver || promotion) {\n        return {\n          ...state,\n        };\n      }\n      if (mode === 'with-AI') {\n        if (history.length <= 2 && turn === actualSide) {\n          return { ...state };\n        }\n      }\n      const isLegal = chess.undo();\n      if (isLegal) {\n        audio.move.play().then().catch();\n      }\n\n      storeItem('fen', chess.fen());\n\n      const lastMove = history.length >= 2 ? history[history.length - 2] : null;\n\n      const isReversedBoard = isReversed({\n        mode,\n        view,\n        turn: chess.turn(),\n        actualSide,\n      });\n\n      const boardProps = {\n        view,\n        turn: chess.turn(),\n        mode,\n        actualSide,\n      };\n\n      return {\n        ...state,\n        board: getBoard(boardProps),\n        turn: chess.turn(),\n        lastMove: lastMove\n          ? [\n              getIndex(lastMove.from, isReversedBoard),\n              getIndex(lastMove.to, isReversedBoard),\n            ]\n          : null,\n      };\n    }\n\n    case SET_VIEW: {\n      storeItem('view', action.payload);\n      return {\n        ...state,\n        view: action.payload,\n      };\n    }\n\n    case SET_SIDE: {\n      storeItem('side', action.payload);\n      return {\n        ...state,\n        side: action.payload,\n      };\n    }\n\n    case SET_MODE: {\n      storeItem('mode', action.payload);\n      return {\n        ...state,\n        mode: action.payload,\n      };\n    }\n\n    case SET_SOUND: {\n      audio.move.volume = action.payload;\n      return {\n        ...state,\n        sound: action.payload,\n      };\n    }\n\n    case SET_AI_LEVEL: {\n      storeItem('AILevel', action.payload.toString());\n      setAISkillLevel(action.payload);\n      return {\n        ...state,\n        AILevel: action.payload,\n      };\n    }\n\n    case SET_MUSIC: {\n      const { music } = audio;\n      if (music.paused && action.payload) {\n        music.play().then().catch();\n      } else if (!action.payload) {\n        music.pause();\n      }\n      music.volume = action.payload;\n      return {\n        ...state,\n        music: action.payload,\n      };\n    }\n\n    default: {\n      return state;\n    }\n  }\n};\n\nexport default chessReducer;\n","import { createStore } from 'redux';\nimport chessReducer from './chessReducer';\n\nconst store = createStore(chessReducer);\n\nexport default store;\n","import { Dispatch } from 'react';\nimport { makeAIMove } from '../redux/chessActions';\n\nconst handleMessage = (e: MessageEvent, dispatch: Dispatch<any>): void => {\n  if (e.data && e.data.includes('bestmove')) {\n    const move = e.data.split(' ')[1];\n    const from = move.slice(0, 2);\n    const to = move.slice(2, 4);\n    dispatch(makeAIMove({ from, to, promotion: move[4] }));\n  }\n};\n\nexport default handleMessage;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport stockfish from './AI';\nimport store from './redux/store';\nimport handleMessage from './AI/handleMessage';\n\nstockfish.onmessage = (e: MessageEvent) => handleMessage(e, store.dispatch);\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}